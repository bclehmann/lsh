WHITESPACE = _{ " " |  "\\" ~ NEWLINE } // i.e. newlines preceded by a backslash are insignificant whitespace

NON_ZERO_DIGIT = _{ '1'..'9' }
DIGIT = _{ ("0" | NON_ZERO_DIGIT) }
DECIMAL_POINT = _{ "." }

PLUS_SIGN = { "+" }
MINUS_SIGN = { "-" }
STAR_SIGN = { "*" }
FORWARD_SLASH = { "/" }

bin_op = _{ PLUS_SIGN | MINUS_SIGN | STAR_SIGN | FORWARD_SLASH }

integer = @{ MINUS_SIGN? ~ DIGIT+ }
real = @{ MINUS_SIGN? ~ integer? ~ DECIMAL_POINT ~ DIGIT+ }

// Must be in this order, @{ integer | real } would match 123 in the input 123.456 because it would greedily match as integer instead
number =  @{ real | integer }

identifier = @{ (ASCII_ALPHA | "_" )+ ~ (ASCII_ALPHANUMERIC | "_")* }

ASSIGNMENT_OPERATOR = _{ "=" }
assignment = { identifier ~ ASSIGNMENT_OPERATOR ~ expr }

atom = _{ number | "(" ~ expr ~ ")" | identifier }
expr = { atom ~ (bin_op ~ atom)* }

line = _{ (assignment | expr) ~ NEWLINE }
lines = _ { line* }